// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String?
  username String  @unique
  email    String? @unique
  password String?
  phone    String? @unique
  avatar   String?

  githubId String? @unique
  kakaoId  String? @unique
  metaId   String? @unique
  googleId String? @unique

  createdSubreddits Subreddit[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  posts   Post[]
  Vote    Vote[]
  Comment Comment[]
}

model Subreddit {
  id          String  @id @default(uuid())
  name        String  @unique
  description String?

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  posts Post[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id          String  @id @default(uuid())
  title       String
  textContent Json
  imageString String?

  Vote    Vote[]
  Comment Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  Subreddit Subreddit? @relation(fields: [subName], references: [name])
  subName   String?
  User      User?      @relation(fields: [userId], references: [id])
  userId    String?
}

enum TypeOfVote {
  UP
  DOWN
}

model Vote {
  id String @id @default(uuid())

  Post   Post?   @relation(fields: [postId], references: [id])
  postId String?
  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  voteType TypeOfVote
}

model Comment {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?
  Post   Post?   @relation(fields: [postId], references: [id])
  postId String?
}
